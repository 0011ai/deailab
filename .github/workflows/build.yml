name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      with:
        python_version: "3.10"

    - name: Setup pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-3.10-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          pip-3.10-
          pip-

    - name: Install dependencies
      run: |
        python -m pip install -U "jupyterlab>=4.0.0,<5"
        python -m pip install deairequest

    - name: Lint the extension
      run: |
        set -eux
        jlpm
        jlpm run lint:check

    - name: Test the frontend extension
      run: |
        set -eux
        jlpm run test

    - name: Build and test the backend extension
      run: |
        set -eux
        python -m pip install .[test]
        mkdir ~/.bacalhau
        ssh-keygen -P "" -t rsa -b 4096 -m pem -f ~/.bacalhau/user_id.pem
        pytest -vv -r ap --cov deailab
        jupyter server extension list
        jupyter server extension list 2>&1 | grep -ie "deailab.*OK"

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "deailab.*OK"
        python -m jupyterlab.browser_check

    - name: Package the extension
      run: |
        set -eux

        pip install build
        python -m build
        pip uninstall -y "deailab" jupyterlab

    - name: Upload extension packages
      uses: actions/upload-artifact@v3
      with:
        name: extension-artifacts
        path: dist/deailab*
        if-no-files-found: error

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: 'x64'

    - name: Setup pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-3.10-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          pip-3.10-
          pip-

    - name: Install dependencies
      run: |
        mkdir ~/.bacalhau
        ssh-keygen -P "" -t rsa -b 4096 -m pem -f ~/.bacalhau/user_id.pem
        python -m pip install -r test_requirement.txt
        python -m pip install -U "jupyterlab>=4.0.0,<5"
        python -m pip install deairequest

    - uses: actions/download-artifact@v3
      with:
        name: extension-artifacts
    - name: Install and Test
      run: |
        set -eux
        # Remove NodeJS, twice to take care of system and locally installed node versions.
        sudo rm -rf $(which node)
        sudo rm -rf $(which node)

        pip install "jupyterlab>=4.0.0,<5" deailab*.whl


        jupyter server extension list
        jupyter server extension list 2>&1 | grep -ie "deailab.*OK"

        jupyter labextension list
        jupyter labextension list 2>&1 | grep -ie "deailab.*OK"
        python -m jupyterlab.browser_check --no-browser-test

  integration-tests:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest

    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/pw-browsers

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Base Setup
      uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      with:
        python_version: "3.10"

    - name: Setup pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-3.10-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          pip-3.10-
          pip-

    - name: Install dependencies
      run: |
        mkdir ~/.bacalhau
        ssh-keygen -P "" -t rsa -b 4096 -m pem -f ~/.bacalhau/user_id.pem
        python -m pip install -r test_requirement.txt
        python -m pip install -U "jupyterlab>=4.0.0,<5"
        python -m pip install deairequest

    - name: Download extension package
      uses: actions/download-artifact@v3
      with:
        name: extension-artifacts

    - name: Install the extension
      run: |
        set -eux
        python -m pip install "jupyterlab>=4.0.0,<5" deailab*.whl

    - name: Install dependencies
      working-directory: ui-tests
      env:
        PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
      run: jlpm install

    - name: Set up browser cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/pw-browsers
        key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}

    - name: Install browser
      run: jlpm playwright install chromium
      working-directory: ui-tests

    - name: Install ifps
      run: |
        wget https://dist.ipfs.tech/kubo/v0.21.0/kubo_v0.21.0_linux-amd64.tar.gz
        tar -xvzf kubo_v0.21.0_linux-amd64.tar.gz
        cd kubo
        bash install.sh
        ipfs init --profile server
        ipfs daemon&

    - name: Wait for ifps
      uses: ifaxity/wait-on-action@v1
      with:
        resource: http-get://localhost:5001/webui
        timeout: 360000

    - name: Execute integration tests
      working-directory: ui-tests
      run: |
        jupyter labextension disable jupyterlab-jupytext
        jlpm playwright test

    - name: Upload Playwright Test report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: deailab-playwright-tests
        path: |
          ui-tests/test-results
          ui-tests/playwright-report
